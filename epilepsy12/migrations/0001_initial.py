# Generated by Django 4.0 on 2022-04-18 17:28

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Epilepsy12User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, help_text="User's first name", max_length=150, null=True)),
                ('surname', models.CharField(blank=True, help_text="User's surname", max_length=150, null=True)),
                ('title', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Mr'), (2, 'Mrs'), (3, 'Ms'), (4, 'Dr'), (5, 'Professor')], null=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('username', models.CharField(help_text='username selected by user', max_length=150, unique=True)),
                ('bio', models.CharField(blank=True, help_text='Share something about yourself', max_length=500, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('role', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Lead Clinician'), (2, 'Centre Administrator'), (3, 'Paediatric Neurologist'), (4, 'General Paediatrician with Epilepsy Interest'), (5, 'Audit Analyst'), (6, 'Audit Administrator')], null=True)),
                ('hospital_trust', models.CharField(help_text="The user's main hospital trust", max_length=100)),
                ('twitter_handle', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AntiEpilepsyMedicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('antiepilepsy_medicine_type', models.IntegerField(choices=[(1, 'Acetazolamide'), (2, 'ACTH'), (3, 'Carbamazepine'), (4, 'Clobazam'), (5, 'Clonazepam'), (6, 'Eslicarbazepine acetate'), (7, 'Ethosuximide'), (8, 'Gabapentin'), (9, 'Lacosamide'), (10, 'Lamotrigine'), (11, 'Levetiracetam'), (12, 'Methylprednisolone'), (13, 'Nitrazepam'), (14, 'Oxcarbazepine'), (15, 'Perampanel'), (16, 'Piracetam'), (17, 'Phenobarbital'), (18, 'Phenytoin'), (19, 'Pregabalin'), (20, 'Prednisolone'), (21, 'Primidone'), (22, 'Rufinamide'), (23, 'Sodium valproate'), (24, 'Stiripentol'), (25, 'Sulthiame'), (26, 'Tiagabine'), (27, 'Topiramate'), (28, 'Vigabatrin'), (29, 'Zonisamide'), ('O', 'Other')], verbose_name='antiepilepsy medicine name')),
                ('antiepilepsy_medicine_type_other', models.CharField(blank=True, max_length=50, verbose_name='other antiepilepsy medicine name')),
                ('antiepilepsy_medicine_snomed_code', models.CharField(blank=True, max_length=50, verbose_name='antiepilepsy medicine SNOMED-CT code')),
                ('antiepilepsy_medicine_start_date', models.DateField(verbose_name='antiepilepsy medicine start date')),
                ('antiepilepsy_medicine_stop_date', models.DateField(verbose_name='antiepilepsy medicine start date')),
                ('antiepilepsy_medicine_risk_discussed', models.BooleanField(default=False, verbose_name='have the risks related to the antiepilepsy medicine been discussed?')),
            ],
            options={
                'verbose_name': ('antiepilepsy medicine',),
                'verbose_name_plural': 'antiepilepsy medicines',
            },
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rescue_medication_prescribed', models.BooleanField(default=False, verbose_name='Has a rescue medicine been prescribed?')),
                ('childrens_epilepsy_surgical_service_referral_criteria_met', models.BooleanField(default=False, verbose_name="Have the criteria for referral to a children's epilepsy surgery service been met?")),
                ('consultant_paediatrician_referral_made', models.BooleanField(default=False, verbose_name='Has a referral been made to a consultant paediatrician with an interest in epilepsy?')),
                ('consultant_paediatrician_referral_date', models.DateField(verbose_name='Date of referral to a consultant paediatrician with an interest in epilepsy.')),
                ('consultant_paediatrician_input_date', models.DateField(verbose_name='Date seen by a consultant paediatrician with an interest in epilepsy.')),
                ('paediatric_neurologist_referral_made', models.BooleanField(default=False, verbose_name='Has a referral to a consultant paediatric neurologist been made?')),
                ('paediatric_neurologist_referral_date', models.DateField(verbose_name='Date of referral to a consultant paediatric neurologist.')),
                ('paediatric_neurologist_input_date', models.DateField(verbose_name='Date seen by consultant paediatric neurologist.')),
                ('childrens_epilepsy_surgical_service_referral_date', models.DateField(blank=True, default=None, verbose_name="Date of referral to a children's epilepsy surgery service")),
                ('childrens_epilepsy_surgical_service_input_date', models.DateField(blank=True, default=None, verbose_name="Date seen by children's epilepsy surgery service")),
                ('were_any_of_the_epileptic_seizures_convulsive', models.BooleanField(default=False, verbose_name='Were any of the epileptic seizures convulsive?')),
                ('prolonged_generalized_convulsive_seizures', models.BooleanField(default=False, verbose_name='Were there any prolonged generalised epileptic seizures?')),
                ('experienced_prolonged_focal_seizures', models.BooleanField(default=False, verbose_name='Were there any prolonged focal seizures?')),
                ('has_an_aed_been_given', models.BooleanField(default=False, verbose_name='Has an antiepilepsy medicine been given?')),
                ('paroxysmal_episode', models.BooleanField(default=False, verbose_name='Were any episodes paroxysmal?')),
            ],
            options={
                'verbose_name': ('assessment',),
                'verbose_name_plural': 'assessments',
            },
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locked', models.BooleanField(default=False, verbose_name='Locked')),
                ('locked_at', models.DateTimeField(blank=True, null=True, verbose_name='Date record locked')),
                ('nhs_number', models.CharField(max_length=10, verbose_name='NHS Number')),
                ('first_name', models.CharField(max_length=100, verbose_name='first name')),
                ('surname', models.CharField(max_length=100, verbose_name='surname')),
                ('gender', models.IntegerField(choices=[(0, 'Not Known'), (1, 'Male'), (2, 'Female'), (9, 'Not Specified')])),
                ('date_of_birth', models.DateField(verbose_name='date of birth (YYYY-MM-DD)')),
                ('postcode', models.CharField(max_length=8, verbose_name='postcode')),
                ('ethnicity', models.CharField(choices=[('N', 'African'), ('L', 'Any other Asian background'), ('P', 'Any other Black background'), ('S', 'Any other ethnic group'), ('G', 'Any other mixed background'), ('C', 'Any other White background'), ('K', 'Bangladeshi or British Bangladeshi'), ('A', 'British, Mixed British'), ('M', 'Caribbean'), ('R', 'Chinese'), ('H', 'Indian or British Indian'), ('B', 'Irish'), ('NULL', 'Not Recorded'), ('Z', 'Not Stated'), ('J', 'Pakistani or British Pakistani'), ('F', 'White and Asian'), ('E', 'White and Black African'), ('D', 'White and Black Caribbean')], max_length=4)),
                ('index_of_multiple_deprivation_quintile', models.PositiveSmallIntegerField(blank=True, editable=False, null=True, verbose_name='index of multiple deprivation calculated from MySociety data.')),
            ],
            options={
                'verbose_name': 'case',
                'verbose_name_plural': 'cases',
            },
        ),
        migrations.CreateModel(
            name='Comorbidity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comorbidity', models.CharField(choices=[('MoD', 'Mood disorder'), ('AxD', 'Anxiety disorder'), ('EmB', 'Emotional/ behavioural'), ('SHm', 'Self harm'), ('Oth', 'Other'), ('CnD', 'Conduct disorder'), ('ODD', 'Oppositional Defiant Disorder (ODD)'), ('ASD', 'Autistic spectrum disorder'), ('CeP', 'Cerebral palsy'), ('NDC', 'Neurodegenerative disease or condition'), ('ChD', 'An identified chromosomal disorder with a neurological or developmental component'), ('ADH', 'Attention deficit hyperactivity disorder'), ('Int', "intellectual disability/global development delay/'learning disability'"), ('Dsp', 'dyspraxia'), ('Dsl', 'dyslexia'), ('SDo', 'speech disorder'), ('Oth', 'other learning difficulty')], max_length=3)),
                ('comorbidity_free_text', models.CharField(default=None, max_length=50)),
                ('comorbidity_snomed_code', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'comorbidity',
                'verbose_name_plural': 'comorbidities',
            },
        ),
        migrations.CreateModel(
            name='ElectroClinicalSyndrome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('electroclinical_syndrome', models.IntegerField(choices=[(46, 'Autosomal dominant nocturnal frontal lobe epilepsy (ADNFLE)'), (48, 'Autosomal dominant partial epilepsy with auditory features)'), (30, 'Bathing epilepsy'), (4, '(Benign) childhood epilepsy with centrotemporal spikes (BECTS) (benign rolandic epilepsy)'), (16, 'Benign familial neonatal seizures'), (38, 'Benign infantile seizures'), (37, '(Benign) Myoclonic epilepsy in infancy'), (21, 'Benign neonatal seizures Benign non-familial neonatal seizures'), (13, 'Childhood absence epilepsy (CAE)'), (27, 'Childhood epilepsy with occipital paroxysms'), (14, 'Dravet syndrome (severe myoclonic epilepsy of/in infancy or SMEI)'), (34, 'Early myoclonic encephalopathy'), (44, 'Epilepsy with generalized tonic-clonic seizures only (Epilepsy with generalised tonic clonic seizures on awakening)'), (41, 'Epilepsy with myoclonic absences'), (5, 'Epilepsy with myoclonic astatic seizures (Doose syndrome) (Myoclonic astatic epilepsy)'), (24, 'Eyelid myoclonia with absences'), (47, 'Familial temporal lobe epilepsies'), (32, 'Familial focal epilepsy with variable foci'), (10, 'Frontal lobe epilepsy'), (23, 'Gelastic seizures due to hypothalamic hamartoma'), (33, 'Generalized Epilepsies with Febrile seizures plus (FS+)'), (28, 'Hemiconvulsion-hemiplegia syndrome'), (29, 'Hot water epilepsy'), (17, 'Idiopathic focal epilepsy of childhood'), (12, 'Juvenile absence epilepsy (JAE)'), (11, 'Juvenile myoclonic epilepsy (JME)'), (40, 'Late onset childhood occipital epilepsy (Gastaut type) (idiopathic childhood occipital epilepsy)'), (42, 'Lennox-Gastaut syndrome'), (43, 'Landau-Kleffner syndrome'), (36, 'Migrating partial (focal) seizures of infancy'), (39, 'Myoclonic encephalopathy in non-progressive disorders (myoclonic status in non-progressive encephalopathies)'), (7, 'Occipital lobe epilepsy'), (35, 'Ohtahara syndrome'), (6, 'Panayiotopoulos syndrome (Early onset (benign) childhood occipital epilepsy'), (8, 'Parietal lobe epilepsy'), (25, 'Perioral myoclonia with absences'), (26, 'Phantom absences'), (19, 'Primary reading epilepsy'), (45, 'Progressive myoclonus (myoclonic) epilepsies (PME)'), (22, "Rasmussen's encephalitis (chronic progressive epilepsia partialis continua) (Kozhevnikov syndrome)"), (31, 'Reflex epilepsies'), (20, 'Startle epilepsy'), (9, 'Temporal lobe epilepsy'), (18, 'Visual sensitive epilepsies'), (15, 'West syndrome'), (3, 'Unclassified syndrome'), (1, 'No epilepsy syndrome stated'), (0, 'Other')])),
                ('electroclinical_syndrome_other', models.CharField(default=None, max_length=250)),
            ],
            options={
                'verbose_name': 'electroclinical syndrome',
                'verbose_name_plural': 'electroclinical syndromes',
            },
        ),
        migrations.CreateModel(
            name='EpilepsyContext',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_febrile_seizure', models.CharField(choices=[('Y', 'Yes'), ('N', 'No'), ('U', 'Uncertain')], default='N', max_length=2, verbose_name='has there been a previous febrile seizure?')),
                ('previous_acute_symptomatic_seizure', models.CharField(choices=[('Y', 'Yes'), ('N', 'No'), ('U', 'Uncertain')], default='N', max_length=2, verbose_name='has there been a previous acute symptomatic seizure?')),
                ('is_there_a_family_history_of_epilepsy', models.CharField(choices=[('Y', 'Yes'), ('N', 'No'), ('U', 'Uncertain')], default='N', max_length=3, verbose_name='is there a family history of epilepsy?')),
                ('previous_neonatal_seizures', models.CharField(choices=[('Y', 'Yes'), ('N', 'No'), ('U', 'Uncertain')], default='N', max_length=2, verbose_name='were there seizures in the neonatal period?')),
                ('diagnosis_of_epilepsy_withdrawn', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=2, verbose_name='has the diagnosis of epilepsy been withdrawn?')),
                ('date_of_first_epileptic_seizure', models.DateField(verbose_name='What date was the first reported epileptic seizure?')),
            ],
            options={
                'verbose_name': 'epilepsy context',
                'verbose_name_plural': 'epilepsy contexts',
            },
        ),
        migrations.CreateModel(
            name='HospitalTrust',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('OrganisationID', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('OrganisationCode', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('OrganisationType', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('SubType', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Sector', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('OrganisationStatus', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IsPimsManaged', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('OrganisationName', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('Address1', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('Address2', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('Address3', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('City', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('County', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('Postcode', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('Latitude', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('Longitude', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('ParentODSCode', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('ParentName', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('Phone', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('Email', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('Website', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('Fax', models.CharField(blank=True, default=None, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'hospital trust',
                'verbose_name_plural': 'hospital trusts',
            },
        ),
        migrations.CreateModel(
            name='NonEpilepsy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nonepilepsy_type', models.IntegerField(choices=[(1, 'Syncope And Anoxic Seizures'), (2, 'Behavioral Psychological And Psychiatric Disorders'), (3, 'Sleep Related Conditions'), (4, 'Paroxysmal Movement Disorders'), (5, 'Migraine Associated Disorders'), (6, 'Miscellaneous Events'), (7, 'Other')], verbose_name='Type of nonepilepsy presentation.')),
                ('specific_nonepilepsy_diagnosis', models.CharField(max_length=50, verbose_name='Specific nonepilepsy diagnosis if known')),
                ('specific_nonepilepsy_diagnosis_snomed_code', models.CharField(max_length=3, verbose_name='SNOMED-CT code for nonepilepsy diagnosis if known')),
                ('nonepilepsy_syncope', models.CharField(choices=[('a', 'Vasovagal syncope'), ('b', 'Reflex anoxic seizures'), ('c', 'Breath-holding attacks'), ('d', 'Hyperventilation syncope'), ('e', 'Compulsive valsalva'), ('f', 'Neurological syncope'), ('g', 'Imposed upper airways obstruction'), ('h', 'Orthostatic intolerance'), ('i', 'Long QT and cardiac syncope'), ('j', 'Hyper-cyanotic spells')], max_length=3, verbose_name='Type of nonepileptic syncope.')),
                ('nonepilepsy_syncope_snomed_code', models.CharField(max_length=3, verbose_name='SNOMED-CT code for nonepilepsy syncope type')),
                ('nonepilepsy_behavioural_symptoms', models.CharField(choices=[('a', 'Daydreaming /inattention'), ('b', 'Infantile gratification'), ('c', 'Eidetic imagery'), ('d', 'Tantrums and rage reactions'), ('e', 'Out of body experiences'), ('f', 'Panic attacks'), ('g', 'Dissociative states'), ('h', 'Non-epileptic seizures'), ('i', 'Hallucinations in psychiatric disorders'), ('j', 'Fabricated / factitious illness')], max_length=3, verbose_name='Type of behavioural arrest described.')),
                ('nonepilepsy_behavioural_symptoms_snomed_code', models.CharField(max_length=50, verbose_name='SNOMED-CT code for type of behavioural arrest described.')),
                ('nonepilepsy_sleep', models.CharField(choices=[('a', 'Sleep related rhythmic movement disorders'), ('b', 'Hypnogogic jerks'), ('c', 'Parasomnias'), ('d', 'REM sleep disorders'), ('e', 'Benign neonatal sleep myoclonus'), ('f', 'Periodic leg movements'), ('g', 'Narcolepsy-cataplexy')], max_length=3, verbose_name='Type of sleep symptoms reported.')),
                ('nonepilepsy_sleep_snomed_code', models.CharField(max_length=50, verbose_name='SNOMED-CT code for type of sleep symptoms reported.')),
                ('nonepilepsy_paroxysmal', models.CharField(choices=[('a', 'Tics'), ('b', 'Stereotypies'), ('c', 'Paroxysmal kinesigenic dyskinesia'), ('d', 'Paroxysmal nonkinesigenic dyskinesia'), ('e', 'Paroxysmal exercise induced dyskinesia'), ('f', 'Benign paroxysmal tonic upgaze'), ('g', 'Episodic ataxias'), ('h', 'Alternating hemiplegia'), ('i', 'Hyperekplexia'), ('j', 'Opsoclonus-myoclonus syndrome')], max_length=3, verbose_name='Type of paroxysmal nonepileptic symptoms reported.')),
                ('nonepilepsy_paroxysmal_snomed_code', models.CharField(max_length=50, verbose_name='SNOMED-CT code for type of paroxysmal nonepileptic symptoms reported.')),
                ('nonepilepsy_migraine', models.CharField(choices=[('a', 'Migraine with visual aura'), ('b', 'Familial hemiplegic migraine'), ('c', 'Benign paroxysmal torticollis'), ('d', 'Benign paroxysmal vertigo'), ('e', 'Cyclical vomiting')], max_length=3, verbose_name='Migraine semiology.')),
                ('nonepilepsy_migraine_snomed_code', models.CharField(max_length=50, verbose_name='SNOMED-CT code for migraine semiology.')),
                ('nonepilepsy_miscellaneous', models.CharField(choices=[('a', 'Benign myoclonus of infancy and shuddering attacks'), ('b', 'Jitteriness'), ('c', 'Sandifer syndrome'), ('d', 'Non-epileptic head drops'), ('e', 'Spasmus nutans'), ('f', 'Raised intracranial pressure'), ('g', 'Paroxysmal extreme pain disorder'), ('h', 'Spinal myoclonus')], max_length=3, verbose_name='Other nonepileptic presentation if not previously specified.')),
                ('nonepilepsy_other', models.CharField(max_length=250, verbose_name='Other nonepileptic presentation if not previously specified.')),
            ],
            options={
                'verbose_name': 'Nonepilepsy',
                'verbose_name_plural': 'Nonepilepsies',
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_date', models.DateField(verbose_name='Date on which registered for the the Epilepsy12 audit')),
                ('registration_close_date', models.DateField(default=None, verbose_name='Date at which the registration is due to close')),
                ('referring_clinician', models.CharField(default=None, max_length=50)),
                ('cohort', models.PositiveSmallIntegerField(default=None, null=True)),
                ('initial_assessment_complete', models.BooleanField(default=False)),
                ('assessment_complete', models.BooleanField(default=False)),
                ('epilepsy_context_complete', models.BooleanField(default=False)),
                ('multiaxial_description_complete', models.BooleanField(default=False)),
                ('investigation_management_complete', models.BooleanField(default=False)),
                ('case', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='epilepsy12.case')),
            ],
            options={
                'verbose_name': 'Registration',
                'verbose_name_plural': 'Registrations',
            },
        ),
        migrations.CreateModel(
            name='SeizureCause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seizure_cause_main', models.CharField(choices=[('Str', 'Structural'), ('Gen', 'Genetic'), ('Inf', 'Infectious'), ('Met', 'Metabolic'), ('Imm', 'Immune'), ('NK', 'Not known')], max_length=3, verbose_name='main identified cause of seizure(s)')),
                ('seizure_cause_main_snomed_code', models.CharField(choices=[('Str', 'Structural'), ('Gen', 'Genetic'), ('Inf', 'Infectious'), ('Met', 'Metabolic'), ('Imm', 'Immune'), ('NK', 'Not known')], default=None, max_length=3, verbose_name='SNOMED-CT code for main identified cause of seizure(s)')),
                ('seizure_cause_structural', models.CharField(choices=[('TbS', 'Tuberous Sclerosis'), ('StW', 'Sturge Weber'), ('FCD', 'Focal cortical dysplasia'), ('HyH', 'Hypothalamic Hamartoma'), ('LGT', 'Low grade tumour'), ('TuO', 'Tumour (other)'), ('MCD', 'Malformations of Cortical Development'), ('Vas', 'Vascular (eg arterial ischaemic stroke venous ischaemia cerebral haemorrhage)'), ('TBI', 'Traumatic brain injury'), ('NR', 'Not required')], default=None, max_length=3, verbose_name='main identified structural cause of seizure(s)')),
                ('seizure_cause_structural_snomed_code', models.CharField(choices=[('TbS', 'Tuberous Sclerosis'), ('StW', 'Sturge Weber'), ('FCD', 'Focal cortical dysplasia'), ('HyH', 'Hypothalamic Hamartoma'), ('LGT', 'Low grade tumour'), ('TuO', 'Tumour (other)'), ('MCD', 'Malformations of Cortical Development'), ('Vas', 'Vascular (eg arterial ischaemic stroke venous ischaemia cerebral haemorrhage)'), ('TBI', 'Traumatic brain injury'), ('NR', 'Not required')], default=None, max_length=3, verbose_name='SNOMED-CT code for main identified structural cause of seizure(s)')),
                ('seizure_cause_genetic', models.CharField(choices=[('DrS', 'Dravet syndrome'), ('GTD', 'Glucose Transporter Defect'), ('AnS', 'Angelman Syndrome'), ('ReS', 'Rett Syndrome'), ('ChA', 'Chromosomal abnormality'), ('GeA', 'Gene abnormality')], default=None, max_length=3, verbose_name='main identified genetic cause of seizure(s)')),
                ('seizure_cause_gene_abnormality', models.CharField(choices=[('UBE', 'UBE3A'), ('GLU', 'GLUT1'), ('SLC', 'SLC2A1'), ('MEC', 'MECP2'), ('SCN', 'SCN1A'), ('STX', 'STXBP1'), ('CDK', 'CDKL5'), ('KCN', 'KCNQ2'), ('SCN', 'SCN2A'), ('KCN', 'KCNT1'), ('ARX', 'ARX'), ('FOX', 'FOXG1'), ('PCD', 'PCDH19'), ('GRI', 'GRIN2A'), ('Oth', 'Other')], default=None, max_length=3, verbose_name='main identified gene abnormality cause of seizure(s)')),
                ('seizure_cause_genetic_other', models.CharField(default=None, max_length=250, verbose_name='other identified genetic cause of seizure(s) not previously specified.')),
                ('seizure_cause_gene_abnormality_snomed_code', models.CharField(default=None, max_length=50, verbose_name='SNOMED-CT code for main identified genetic cause of seizure(s)')),
                ('seizure_cause_chromosomal_abnormality', models.CharField(default=None, max_length=200, verbose_name='main identified chromosomal cause of seizure(s)')),
                ('seizure_cause_infectious', models.CharField(default=None, max_length=250, verbose_name='main identified infectious cause of seizure(s)')),
                ('seizure_cause_infectious_snomed_code', models.CharField(default=None, max_length=250, verbose_name='SNOMED-CT code for main identified infectious cause of seizure(s)')),
                ('seizure_cause_metabolic', models.CharField(choices=[('Mit', 'Mitochondrial disorder'), ('Neu', 'Neuronal Ceroid Lipofuscinosis (Batten Disease)'), ('PPM', 'Disorder of pyridoxine/pyridoxal phosphate metabolism'), ('BiM', 'Disorder of biotin metabolism'), ('CrM', 'Disorder of creatine metabolism'), ('AmA', 'Disorder of amino acid'), ('UrA', 'Disorder of urea cycle'), ('PyP', 'Disorder of pyrimidine and purine'), ('Cho', 'Disorder of cholesterol'), ('Oth', 'Other neurometabolic disorder')], default=None, max_length=3, verbose_name='main identified metabolic cause of seizure(s)')),
                ('seizure_cause_metabolic_other', models.CharField(default=None, max_length=250, verbose_name='other identified metabolic cause of seizure(s) not previously specified.')),
                ('seizure_cause_metabolic_snomed_code', models.CharField(default=None, max_length=250, verbose_name='SNOMED-CT code for other identified metabolic cause of seizure(s) not previously specified.')),
                ('seizure_cause_immune', models.CharField(choices=[('RaE', 'Rasmussen Encephalitis'), ('AnM', 'Antibody mediated')], default=None, max_length=3, verbose_name='main identified immune cause of seizure(s).')),
                ('seizure_cause_immune_antibody', models.CharField(choices=[('VGK', 'VGKC'), ('NMD', 'NMDAR'), ('GAD', 'GAD'), ('TPO', 'TPO'), ('MOG', 'MOG'), ('Oth', 'Other')], default=None, max_length=3, verbose_name='autoantibody identified as cause of seizure(s).')),
                ('seizure_cause_immune_antibody_other', models.CharField(default=None, max_length=250, verbose_name='other identified antibody not previously specified causing seizure(s).')),
                ('seizure_cause_immune_snomed_code', models.CharField(default=None, max_length=250, verbose_name='SNOMED-CT code for main identified immune cause of seizure(s).')),
            ],
            options={
                'verbose_name': 'Main cause of seizure(s)',
                'verbose_name_plural': 'Main causes of seizure(s)',
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_is_actively_involved_in_epilepsy_care', models.BooleanField(default=False)),
                ('site_is_primary_centre_of_epilepsy_care', models.BooleanField(default=False, unique=True)),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='epilepsy12.registration')),
            ],
            options={
                'verbose_name': 'site',
                'verbose_name_plural': 'sites',
            },
        ),
        migrations.CreateModel(
            name='SeizureType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epilepsy_or_nonepilepsy_status', models.CharField(choices=[('E', 'Epilepsy'), ('NE', 'Non-epilepsy'), ('U', 'Uncertain')], max_length=3, verbose_name='Is a diagnosis of epilepsy definite, or uncertain.')),
                ('epileptic_seizure_type', models.CharField(choices=[('FO', 'Focal onset'), ('GO', 'Generalised onset'), ('UO', 'Unknown onset'), ('UC', 'Unclassified')], max_length=3)),
                ('non_epileptic_seizure_type', models.CharField(choices=[('SAS', 'Syncope And Anoxic Seizures'), ('BPP', 'Behavioral Psychological And Psychiatric Disorders'), ('SRC', 'Sleep Related Conditions'), ('PMD', 'Paroxysmal Movement Disorders'), ('MAD', 'Migraine Associated Disorders'), ('ME', 'Miscellaneous Events'), ('Oth', 'Other')], default=None, max_length=3)),
                ('focal_onset_impaired_awareness', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_automatisms', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_atonic', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_clonic', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_left', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_right', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_epileptic_spasms', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_hyperkinetic', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_myoclonic', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_tonic', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_autonomic', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_behavioural_arrest', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_cognitive', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_emotional', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_sensory', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_centrotemporal', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_temporal', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_frontal', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_parietal', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_occipital', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_gelastic', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_focal_to_bilateral_tonic_clonic', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_other', models.IntegerField(choices=[(1, 'Checked'), (2, 'Unchecked')], default=None)),
                ('focal_onset_other_details', models.CharField(max_length=250)),
                ('generalised_onset', models.CharField(choices=[('TCl', 'Tonic-clonic'), ('Clo', 'Clonic'), ('Ton', 'Tonic'), ('MyC', 'Myoclonic'), ('MTC', 'Myoclonic-tonic-clonic'), ('MAt', 'Myoclonic-atonic'), ('Ato', 'Atonic'), ('EpS', 'Epileptic spasms'), ('TAb', 'Typical absence'), ('Aab', 'Atypical absence'), ('MAb', 'Myoclonic absence'), ('AEM', 'Absence with eyelid myoclonia'), ('Oth', 'Other')], default=None, max_length=3)),
                ('generalised_onset_other_details', models.CharField(max_length=250)),
                ('nonepileptic_seizure_unknown_onset', models.CharField(choices=[('TCl', 'Tonic-clonic'), ('EpS', 'Epileptic spasms'), ('BAr', 'Behaviour arrest'), ('Oth', 'Other')], default=None, max_length=3)),
                ('nonepileptic_seizure_unknown_onset_other_details', models.CharField(max_length=250)),
                ('nonepileptic_seizure_syncope', models.CharField(choices=[('a', 'Vasovagal syncope'), ('b', 'Reflex anoxic seizures'), ('c', 'Breath-holding attacks'), ('d', 'Hyperventilation syncope'), ('e', 'Compulsive valsalva'), ('f', 'Neurological syncope'), ('g', 'Imposed upper airways obstruction'), ('h', 'Orthostatic intolerance'), ('i', 'Long QT and cardiac syncope'), ('j', 'Hyper-cyanotic spells')], default=None, max_length=3)),
                ('nonepileptic_seizure_behavioural', models.CharField(choices=[('a', 'Daydreaming /inattention'), ('b', 'Infantile gratification'), ('c', 'Eidetic imagery'), ('d', 'Tantrums and rage reactions'), ('e', 'Out of body experiences'), ('f', 'Panic attacks'), ('g', 'Dissociative states'), ('h', 'Non-epileptic seizures'), ('i', 'Hallucinations in psychiatric disorders'), ('j', 'Fabricated / factitious illness')], default=None, max_length=3)),
                ('nonepileptic_seizure_sleep', models.CharField(choices=[('a', 'Sleep related rhythmic movement disorders'), ('b', 'Hypnogogic jerks'), ('c', 'Parasomnias'), ('d', 'REM sleep disorders'), ('e', 'Benign neonatal sleep myoclonus'), ('f', 'Periodic leg movements'), ('g', 'Narcolepsy-cataplexy')], default=None, max_length=3)),
                ('nonepileptic_seizure_paroxysmal', models.CharField(choices=[('a', 'Tics'), ('b', 'Stereotypies'), ('c', 'Paroxysmal kinesigenic dyskinesia'), ('d', 'Paroxysmal nonkinesigenic dyskinesia'), ('e', 'Paroxysmal exercise induced dyskinesia'), ('f', 'Benign paroxysmal tonic upgaze'), ('g', 'Episodic ataxias'), ('h', 'Alternating hemiplegia'), ('i', 'Hyperekplexia'), ('j', 'Opsoclonus-myoclonus syndrome')], default=None, max_length=3)),
                ('nonepileptic_seizure_migraine', models.CharField(choices=[('a', 'Migraine with visual aura'), ('b', 'Familial hemiplegic migraine'), ('c', 'Benign paroxysmal torticollis'), ('d', 'Benign paroxysmal vertigo'), ('e', 'Cyclical vomiting')], default=None, max_length=3)),
                ('nonepileptic_seizure_miscellaneous', models.CharField(choices=[('a', 'Benign myoclonus of infancy and shuddering attacks'), ('b', 'Jitteriness'), ('c', 'Sandifer syndrome'), ('d', 'Non-epileptic head drops'), ('e', 'Spasmus nutans'), ('f', 'Raised intracranial pressure'), ('g', 'Paroxysmal extreme pain disorder'), ('h', 'Spinal myoclonus')], default=None, max_length=3)),
                ('nonepileptic_seizure_other', models.CharField(max_length=250)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='epilepsy12.assessment')),
            ],
            options={
                'verbose_name': 'Main type of seizure(s)',
                'verbose_name_plural': 'Main types of seizure(s)',
            },
        ),
        migrations.CreateModel(
            name='Investigation_Management',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rescue_medicine_type', models.CharField(choices=[('BMZ', 'Buccal midazolam'), ('RDZ', 'Rectal diazepam'), ('Oth', 'Other')], max_length=3, verbose_name='Type of rescue medicine prescribed')),
                ('rescue_medicine_other', models.CharField(max_length=100, verbose_name='Other documented rescue medicine previously not specified.')),
                ('rescue_medicine_start_date', models.DateField(verbose_name='date rescue medicine prescribed/given.')),
                ('rescue_medicine_stop_date', models.DateField(default=None, verbose_name='date rescue medicine stopped if known.')),
                ('rescue_medicine_status', models.BooleanField(verbose_name='status of rescue medicine prescription.')),
                ('rescue_medicine_notes', models.CharField(max_length=250, verbose_name='additional notes relating to rescue medication.')),
                ('eeg_indicated', models.BooleanField(default=True)),
                ('eeg_request_date', models.DateTimeField()),
                ('eeg_performed_date', models.DateTimeField()),
                ('twelve_lead_ecg_status', models.BooleanField(default=False)),
                ('ct_head_scan_status', models.BooleanField(default=False)),
                ('mri_brain_date', models.DateField()),
                ('registration', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='epilepsy12.registration', verbose_name='Related Registration')),
            ],
            options={
                'verbose_name': 'Investigations and Managment',
                'verbose_name_plural': 'Investigations and Managment Milestones',
            },
        ),
        migrations.CreateModel(
            name='InitialAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_initial_assessment', models.DateField(verbose_name='On what date did the initial assessment occur?')),
                ('date_of_referral_to_general_paediatrics', models.DateField(verbose_name='date of referral to general paediatrics')),
                ('first_paediatric_assessment_in_acute_or_nonacute_setting', models.IntegerField(choices=[(1, 'Acute'), (2, 'Non-acute'), (3, "Don't know")], verbose_name='Is the first paediatric assessment in an acute or nonacute setting?')),
                ('has_description_of_the_episode_or_episodes_been_gathered', models.BooleanField(default=False, verbose_name='has a description of the episode or episodes been gathered?')),
                ('when_the_first_epileptic_episode_occurred_confidence', models.CharField(choices=[('Apx', 'Approximate date'), ('Exc', 'Exact date'), ('NK', 'Not known')], max_length=3, verbose_name='how accurate is the date of the first epileptic episode?')),
                ('when_the_first_epileptic_episode_occurred', models.DateField(verbose_name='what is the date that the first epileptic episode occurred?')),
                ('has_number_of_episodes_since_the_first_been_documented', models.BooleanField(default=False, verbose_name='has the frequency of episodes since the first recorded been documented?')),
                ('general_examination_performed', models.BooleanField(default=False, verbose_name='has a general clinical examination been performed?')),
                ('neurological_examination_performed', models.BooleanField(default=False, verbose_name='has a neurological examination been performed?')),
                ('developmental_learning_or_schooling_problems', models.BooleanField(default=False, verbose_name='has the presence or absence of developmental, learning or school-based problems been recorded?')),
                ('behavioural_or_emotional_problems', models.BooleanField(default=False, verbose_name='are there any behaviour or emotional comorbid conditions present?')),
                ('diagnostic_status', models.CharField(choices=[('a', 'The child has had an episode or episodes where one or more are considered epileptic'), ('b', 'The child has had an episode or episodes that are considered non-epileptic only'), ('c', 'The child has had an episode or episodes where there remains uncertainty whether episodes were epileptic or not.')], default=None, max_length=1, verbose_name='Status of epilepsy diagnosis. Must have epilepsy or probable epilepsy to be included.')),
                ('registration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='epilepsy12.registration', verbose_name='Related Registration')),
            ],
            options={
                'verbose_name': 'initial assessment',
                'verbose_name_plural': 'initial assessments',
            },
        ),
        migrations.AddIndex(
            model_name='hospitaltrust',
            index=models.Index(fields=['OrganisationName'], name='epilepsy12__Organis_abe360_idx'),
        ),
        migrations.AddField(
            model_name='epilepsycontext',
            name='registration',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='epilepsy12.registration', verbose_name='Related Registration'),
        ),
        migrations.AddField(
            model_name='comorbidity',
            name='case',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comorbidities', to='epilepsy12.case'),
        ),
        migrations.AddField(
            model_name='case',
            name='locked_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='epilepsy12.epilepsy12user', verbose_name='locked by'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='registration',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='epilepsy12.registration', verbose_name='related registration'),
        ),
        migrations.AddField(
            model_name='antiepilepsymedicine',
            name='assessment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='epilepsy12.assessment', verbose_name='related assessment'),
        ),
        migrations.AddField(
            model_name='epilepsy12user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='epilepsy12user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='initialassessment',
            index=models.Index(fields=['date_of_initial_assessment'], name='epilepsy12__date_of_e184d3_idx'),
        ),
    ]
