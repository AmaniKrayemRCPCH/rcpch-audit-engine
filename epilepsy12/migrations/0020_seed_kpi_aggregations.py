# Generated by Django 4.2.4 on 2023-08-11 14:16

# Python

# Third-party Imports
from django.db import migrations
from epilepsy12.models import Organisation, KPIAggregation

# RCPCH Imports
from epilepsy12.common_view_functions import get_kpi_value_counts,get_filtered_cases_by_abstraction

def seed_medicines(apps, schema_editor):
    """
    This function adds medicines to the MedicineEntity model from SNOMED and local Epilepsy12 list.

    Parameters:
    apps (list): A list of installed apps
    schema_editor (object): A database schema editor object

    Returns:
    None
    """
    print('\033[33m', 'Creating all KPIAggregation models for each Organisation', '\033[33m')
    
    # 1. Get organisation-labelled filtered cases
    labelled_filtered_cases = get_filtered_cases_by_abstraction(abstraction_level='organisation', cohort=6)
    
    # 2. Get KPI aggregation value counts
    all_kpi_agg_objects = []
    for filtered_cases in labelled_filtered_cases:
        
        value_counts = get_kpi_value_counts(filtered_cases=filtered_cases['filtered_cases'])
        
        # 3. Feed value counts to update KPIAggregation, append to factory list
        organisation = Organisation.objects.filter(ODSCode=filtered_cases['region']).first()
        kpi_agg = KPIAggregation(**value_counts, organisation=organisation)
        all_kpi_agg_objects.append(kpi_agg)
        print(f"Created {kpi_agg}")
    
    # 4. Bulk create insert
    KPIAggregation.objects.bulk_create(all_kpi_agg_objects)

class Migration(migrations.Migration):
    dependencies = [
        ("epilepsy12", "0019_kpiaggregation_last_updated"),
    ]

    operations = [migrations.RunPython(seed_medicines)]
