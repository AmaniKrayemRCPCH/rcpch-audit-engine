# Generated by Django 4.2 on 2023-04-24 14:44

# Python
from dateutil.relativedelta import relativedelta

# Third-party Imports
from django.db import migrations

# RCPCH Imports
from ..models import Registration
from ..general_functions import first_tuesday_in_january, current_cohort_start_date, random_date
from ..management.commands.create_e12_records import create_epilepsy12_record, create_registrations

def seed_registrations(apps, schema_editor):
    """
    Seeds the Epilepsy12 database with fictional patient registrations and completes all fields with random answers.

    This function creates fictional patient registrations in the Epilepsy12 database, and completes all fields with random 
    answers. First, it registers the cases by calling `create_registrations()`. Then, it loops through all registrations, 
    setting the registration date and eligibility criteria as well as calling `create_epilepsy12_record` for each 
    registration to complete all the fields.
    """
    print('\033[33m', 'Registering fictional cases in Epilepsy12...', '\033[33m')
    
    create_registrations()
    
    # Loop through the registrations and score all fields
    print('\033[33m', 'Completing all the Epilepsy12 fields for the fictional cases...', '\033[33m')
    for registration in Registration.objects.all():
        current_cohort_end_date = first_tuesday_in_january(
            current_cohort_start_date().year + 2) + relativedelta(days=7)
        registration.registration_date = random_date(
            start=current_cohort_start_date(), end=current_cohort_end_date)
        registration.eligibility_criteria_met = True
        registration.save()

        create_epilepsy12_record(registration_instance=registration)
    
    

class Migration(migrations.Migration):
    dependencies = [
        ("epilepsy12", "0009_seed_dummy_cases"),
    ]

    operations = [migrations.RunPython(seed_registrations)]
