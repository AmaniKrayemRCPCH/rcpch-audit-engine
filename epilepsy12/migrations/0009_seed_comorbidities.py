# Generated by Django 4.2 on 2023-04-24 14:00

# Python

# Third-party Imports
from django.db import migrations

# RCPCH Imports
from ..models import ComorbidityEntity
from ..general_functions import (
    fetch_paediatric_neurodisability_outpatient_diagnosis_simple_reference_set,
)


def seed_comorbidities(apps, schema_editor):
    """
    This function seeds the ComorbidityEntity model with SNOMED CT definitions and codes for epilepsy causes.
    It should be run periodically to compare the stored value in the database and update records if there is a change.

    Parameters:
        apps (list): A list of installed apps
        schema_editor (object): A database schema editor object

    Returns:
        None
    """
    print(
        "\033[33m",
        "Seeding comorbidities from paediatric neurodisability reference set...",
        "\033[33m",
    )
    if ComorbidityEntity.objects.count() > 0:
        print("Comorbidities already exist. Skipping...")
        return
    # ecl = '<< 35919005'
    # comorbidity_choices = fetch_ecl(ecl)
    comorbidity_choices = (
        fetch_paediatric_neurodisability_outpatient_diagnosis_simple_reference_set()
    )

    for index, comorbidity_choice in enumerate(comorbidity_choices):
        new_comorbidity = ComorbidityEntity(
            conceptId=comorbidity_choice["conceptId"],
            term=comorbidity_choice["term"],
            preferredTerm=comorbidity_choice["preferredTerm"],
            description=None,
            snomed_ct_edition=None,
            snomed_ct_version=None,
            icd_code=None,
            icd_version=None,
            dsm_code=None,
            dsm_version=None,
        )
        try:
            new_comorbidity.save()
        except Exception as e:
            print(f"Comorbidity {comorbidity_choice.preferredTerm} not added. {e}")
    print(f"{index} comorbidities added")


class Migration(migrations.Migration):
    dependencies = [
        ("epilepsy12", "0008_seed_syndromes"),
    ]

    operations = [migrations.RunPython(seed_comorbidities)]
