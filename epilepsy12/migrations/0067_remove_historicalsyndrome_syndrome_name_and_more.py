# Generated by Django 4.2 on 2023-04-07 21:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import epilepsy12.models_folder.help_text_mixin
import simple_history.models


class Migration(migrations.Migration):
    dependencies = [
        ("epilepsy12", "0066_episode_calculated_score_and_more"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="historicalsyndrome",
            name="syndrome_name",
        ),
        migrations.RemoveField(
            model_name="syndrome",
            name="syndrome_name",
        ),
        migrations.AlterField(
            model_name="episode",
            name="epileptic_seizure_onset_type",
            field=models.CharField(
                choices=[
                    ("FO", "Focal onset"),
                    ("GO", "Generalised onset"),
                    ("UO", "Unknown onset"),
                    ("UC", "Unclassified"),
                ],
                default=None,
                help_text={
                    "label": "How best would describe the onset of the epileptic episode?",
                    "reference": "The citation is Operational classification of seizure types by the International League Against Epilepsy: Position Paper of the ILAE Commission for Classification and Terminology. Epilepsia, 58(4):522–530, 2017.",
                },
                max_length=3,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="episode",
            name="nonepileptic_seizure_unknown_onset",
            field=models.CharField(
                blank=True,
                choices=[
                    ("BAr", "Behaviour arrest"),
                    ("EpS", "Epileptic spasms"),
                    ("TCl", "Tonic-clonic"),
                    ("Oth", "Other"),
                ],
                default=None,
                help_text={
                    "label": "How best describes the onset of the nonepileptic episode(s)?",
                    "reference": "The citation is Operational classification of seizure types by the International League Against Epilepsy: Position Paper of the ILAE Commission for Classification and Terminology. Epilepsia, 58(4):522–530, 2017.",
                },
                max_length=3,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="historicalepisode",
            name="epileptic_seizure_onset_type",
            field=models.CharField(
                choices=[
                    ("FO", "Focal onset"),
                    ("GO", "Generalised onset"),
                    ("UO", "Unknown onset"),
                    ("UC", "Unclassified"),
                ],
                default=None,
                help_text={
                    "label": "How best would describe the onset of the epileptic episode?",
                    "reference": "The citation is Operational classification of seizure types by the International League Against Epilepsy: Position Paper of the ILAE Commission for Classification and Terminology. Epilepsia, 58(4):522–530, 2017.",
                },
                max_length=3,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="historicalepisode",
            name="nonepileptic_seizure_unknown_onset",
            field=models.CharField(
                blank=True,
                choices=[
                    ("BAr", "Behaviour arrest"),
                    ("EpS", "Epileptic spasms"),
                    ("TCl", "Tonic-clonic"),
                    ("Oth", "Other"),
                ],
                default=None,
                help_text={
                    "label": "How best describes the onset of the nonepileptic episode(s)?",
                    "reference": "The citation is Operational classification of seizure types by the International League Against Epilepsy: Position Paper of the ILAE Commission for Classification and Terminology. Epilepsia, 58(4):522–530, 2017.",
                },
                max_length=3,
                null=True,
            ),
        ),
        migrations.CreateModel(
            name="SyndromeEntity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "syndrome_name",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        help_text={
                            "label": "The name of a given syndrome",
                            "reference": "The name of a given syndrome",
                        },
                        null=True,
                    ),
                ),
                (
                    "snomed_ct_code",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text={
                            "label": "The SNOMED-CT code",
                            "reference": "The SNOMED-CT code",
                        },
                        null=True,
                    ),
                ),
                (
                    "icd_10_code",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text={
                            "label": "The ICD-10 code",
                            "reference": "The ICD-10 code",
                        },
                        null=True,
                    ),
                ),
                (
                    "icd_10_name",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text={
                            "label": "The ICD-10 name",
                            "reference": "The ICD-10 name",
                        },
                        null=True,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="craeted_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="record created by user in %(class)",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="record updated by user in %(class)",
                    ),
                ),
            ],
            options={
                "verbose_name": "SyndromeEntity",
                "verbose_name_plural": "SyndromeEntities",
            },
            bases=(
                models.Model,
                epilepsy12.models_folder.help_text_mixin.HelpTextMixin,
            ),
        ),
        migrations.CreateModel(
            name="HistoricalSyndromeEntity",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "syndrome_name",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        help_text={
                            "label": "The name of a given syndrome",
                            "reference": "The name of a given syndrome",
                        },
                        null=True,
                    ),
                ),
                (
                    "snomed_ct_code",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text={
                            "label": "The SNOMED-CT code",
                            "reference": "The SNOMED-CT code",
                        },
                        null=True,
                    ),
                ),
                (
                    "icd_10_code",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text={
                            "label": "The ICD-10 code",
                            "reference": "The ICD-10 code",
                        },
                        null=True,
                    ),
                ),
                (
                    "icd_10_name",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text={
                            "label": "The ICD-10 name",
                            "reference": "The ICD-10 name",
                        },
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="record created by user in %(class)",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="record updated by user in %(class)",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical SyndromeEntity",
                "verbose_name_plural": "historical SyndromeEntities",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name="historicalsyndrome",
            name="syndrome",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="epilepsy12.syndromeentity",
            ),
        ),
        migrations.AddField(
            model_name="syndrome",
            name="syndrome",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="epilepsy12.syndromeentity",
            ),
        ),
    ]
