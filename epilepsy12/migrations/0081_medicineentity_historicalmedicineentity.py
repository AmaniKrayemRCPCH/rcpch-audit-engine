# Generated by Django 4.2 on 2023-04-12 13:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import epilepsy12.models_folder.help_text_mixin
import simple_history.models


class Migration(migrations.Migration):
    dependencies = [
        ("epilepsy12", "0080_alter_comorbidity_comorbidityentity_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="MedicineEntity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "medicine_name",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text={
                            "label": "Medicine Name",
                            "reference": "Please enter the medicine.",
                        },
                        null=True,
                    ),
                ),
                ("conceptId", models.CharField(blank=True, default=None, null=True)),
                ("term", models.CharField(blank=True, default=None, null=True)),
                (
                    "preferredTerm",
                    models.CharField(blank=True, default=None, null=True),
                ),
                ("description", models.CharField(
                    blank=True, default=None, null=True)),
                (
                    "snomed_ct_edition",
                    models.CharField(blank=True, default=None, null=True),
                ),
                (
                    "snomed_ct_version",
                    models.CharField(blank=True, default=None, null=True),
                ),
                ("icd_code", models.CharField(blank=True, default=None, null=True)),
                (
                    "icd_version",
                    models.IntegerField(blank=True, default=None, null=True),
                ),
                ("dsm_code", models.CharField(blank=True, default=None, null=True)),
                (
                    "dsm_version",
                    models.IntegerField(blank=True, default=None, null=True),
                ),
                ("is_rescue", models.BooleanField(
                    blank=True, default=None, null=True),),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="craeted_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="record created by user in %(class)",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="record updated by user in %(class)",
                    ),
                ),
            ],
            options={
                "verbose_name": "MedicineEntity",
                "verbose_name_plural": "MedicineEntities",
            },
            bases=(
                models.Model,
                epilepsy12.models_folder.help_text_mixin.HelpTextMixin,
            ),
        ),
        migrations.CreateModel(
            name="HistoricalMedicineEntity",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "medicine_name",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text={
                            "label": "Medicine Name",
                            "reference": "Please enter the medicine.",
                        },
                        null=True,
                    ),
                ),
                ("conceptId", models.CharField(blank=True, default=None, null=True)),
                ("term", models.CharField(blank=True, default=None, null=True)),
                (
                    "preferredTerm",
                    models.CharField(blank=True, default=None, null=True),
                ),
                ("description", models.CharField(
                    blank=True, default=None, null=True)),
                (
                    "snomed_ct_edition",
                    models.CharField(blank=True, default=None, null=True),
                ),
                (
                    "snomed_ct_version",
                    models.CharField(blank=True, default=None, null=True),
                ),
                ("icd_code", models.CharField(blank=True, default=None, null=True)),
                (
                    "icd_version",
                    models.IntegerField(blank=True, default=None, null=True),
                ),
                ("dsm_code", models.CharField(blank=True, default=None, null=True)),
                (
                    "dsm_version",
                    models.IntegerField(blank=True, default=None, null=True),
                ),
                ("is_rescue", models.BooleanField(
                    blank=True, default=None, null=True),),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(
                    max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"),
                                 ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="record created by user in %(class)",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="record updated by user in %(class)",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical MedicineEntity",
                "verbose_name_plural": "historical MedicineEntities",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
