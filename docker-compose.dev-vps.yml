##########################
########  README  ########
##########################


# DOCKER COMPOSE FILE FOR DEV VPS DEPLOYMENT

# Runs Epilepsy12 for development on port 8000
# Syncs changes in local code folder to the E12 container
# Starts from empty DB, creates and migrates the database
# Seeds the database with cases, and the RCPCH audit team user

# TODO: remove Volume


version: "3.10"

services:

  # Caddy reverse proxy - web-facing SSL server
  caddy:
    image: caddy
    depends_on:
      - django
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data/
      - caddy_data:/config/
      - ./Caddyfile:/etc/caddy/Caddyfile

  # Django web application
  django: &django
    build: .
    depends_on:
      - postgis
      - redis
    volumes:
      - .:/app/
    environment:
      # these env vars are ONLY for development
      - E12_POSTGRES_DB_USER=epilepsy12user
      - E12_POSTGRES_DB_PASSWORD=password
      - E12_POSTGRES_DB_NAME=epilepsy12db
      - E12_POSTGRES_DB_HOST=postgis
      - E12_POSTGRES_DB_PORT=5432
      - POSTCODES_IO_API_URL=https://api.postcodes.io
      - RCPCH_CENSUS_PLATFORM_URL=https://api.rcpch.ac.uk/deprivation/v1 # live
      - RCPCH_HERMES_SERVER_URL=http://rcpch-hermes.uksouth.azurecontainer.io:8080/v1/snomed
      - NHS_ODS_API_URL=https://api.nhs.uk/service-search?api-version=2
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - envs/dev-vps.env # env file - NOT committed to Git
    command: >
      sh -c "python manage.py collectstatic --noinput &&
            python manage.py migrate &&
            python manage.py seed --mode=cases --cases 200 &&
            python manage.py seed --mode=seed_registrations &&
            python manage.py seed --mode=seed_groups_and_permissions &&
            python manage.py createsuperuser --noinput || true &&
            gunicorn --bind=0.0.0.0:8000 --timeout 600 rcpch-audit-engine.wsgi"
    restart: always

  # PostgreSQL with PostGIS extension
  postgis:
    image: postgis/postgis:15-3.3
    volumes:
      - auditenginedb:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=epilepsy12user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=epilepsy12db
      - TZ="Europe/London"
    restart: always

  # Redis backend for Celery task scheduler
  redis:
    image: redis:alpine
    expose:
      - 6379
    restart: always

  # Celery worker
  celeryworker:
    <<: *django # this will inherit all the settings from the django service
    command: celery -A rcpch-audit-engine worker -l info

  # Flower UI for Celery tasks
  flower:
    <<: *django # this will inherit all the settings from the django service
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=8888
    ports:
      - 8888:8888
    volumes:
      - flower_data:/data
    command: celery -A rcpch-audit-engine flower --persistent=True

  # Celery scheduled tasks/cron
  celerybeat:
    <<: *django # this will inherit all the settings from the django service
    command: celery -A rcpch-audit-engine beat -l info

# Data volumes
volumes:
  auditenginedb:
  flower_data:
  caddy_data:

